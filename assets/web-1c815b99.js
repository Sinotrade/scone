import{B as s}from"./base-09837a73.js";import{B as r,g as n,a as t,b as i}from"./AppChart-f2ca880b.js";import"./index-f6dc58d3.js";import"./SDisplay-1c8229b7.js";import"./AppHeader-30165889.js";import"./SFlexCenter-d67a581b.js";import"./Home-2eaf32ee.js";import"./LoaderIcon-a42a8147.js";import"./toast-c468639c.js";import"./index-a1315572.js";class v extends s{constructor(){super(...arguments),this.biometryType=r.none}async checkBiometry(){return Promise.resolve({isAvailable:this.biometryType!==r.none,biometryType:this.biometryType,reason:""})}async authenticate(e){return this.checkBiometry().then(({isAvailable:o,biometryType:m})=>{if(o){if(confirm(e?.reason||`Authenticate with ${n(m)}?`))return;throw new t("User cancelled",i.userCancel)}throw new t("Biometry not available",i.biometryNotAvailable)})}async setBiometryType(e){return typeof e>"u"||(typeof e=="string"?r.hasOwnProperty(e)&&(this.biometryType=r[e]):this.biometryType=e),Promise.resolve()}}export{v as BiometricAuthWeb};

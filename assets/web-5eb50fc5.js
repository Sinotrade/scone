import{B as s}from"./base-a43135d1.js";import{B as r,g as n,a as t,b as i}from"./AppChart-a0f03ec6.js";import"./index-ae810b16.js";import"./SDisplay-d1183387.js";import"./AppHeader-3b4326a4.js";import"./SFlexCenter-31b94995.js";import"./Home-9f265191.js";import"./LoaderIcon-e8fe4b77.js";import"./toast-e866fedd.js";import"./index-f9d20025.js";class v extends s{constructor(){super(...arguments),this.biometryType=r.none}async checkBiometry(){return Promise.resolve({isAvailable:this.biometryType!==r.none,biometryType:this.biometryType,reason:""})}async authenticate(e){return this.checkBiometry().then(({isAvailable:o,biometryType:m})=>{if(o){if(confirm(e?.reason||`Authenticate with ${n(m)}?`))return;throw new t("User cancelled",i.userCancel)}throw new t("Biometry not available",i.biometryNotAvailable)})}async setBiometryType(e){return typeof e>"u"||(typeof e=="string"?r.hasOwnProperty(e)&&(this.biometryType=r[e]):this.biometryType=e),Promise.resolve()}}export{v as BiometricAuthWeb};

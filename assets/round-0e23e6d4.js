var p=typeof global=="object"&&global&&global.Object===Object&&global;const m=p;var I=typeof self=="object"&&self&&self.Object===Object&&self,$=m||I||Function("return this")();const j=$;var h=j.Symbol;const i=h;var T=Object.prototype,N=T.hasOwnProperty,A=T.toString,f=i?i.toStringTag:void 0;function w(t){var r=N.call(t,f),n=t[f];try{t[f]=void 0;var e=!0}catch{}var o=A.call(t);return e&&(r?t[f]=n:delete t[f]),o}var x=Object.prototype,F=x.toString;function P(t){return F.call(t)}var M="[object Null]",G="[object Undefined]",s=i?i.toStringTag:void 0;function B(t){return t==null?t===void 0?G:M:s&&s in Object(t)?w(t):P(t)}function E(t){return t!=null&&typeof t=="object"}var R="[object Symbol]";function l(t){return typeof t=="symbol"||E(t)&&B(t)==R}function Y(t,r){for(var n=-1,e=t==null?0:t.length,o=Array(e);++n<e;)o[n]=r(t[n],n,t);return o}var k=Array.isArray;const H=k;var L=1/0,b=i?i.prototype:void 0,a=b?b.toString:void 0;function S(t){if(typeof t=="string")return t;if(H(t))return Y(t,S)+"";if(l(t))return a?a.call(t):"";var r=t+"";return r=="0"&&1/t==-L?"-0":r}var U=/\s/;function W(t){for(var r=t.length;r--&&U.test(t.charAt(r)););return r}var X=/^\s+/;function _(t){return t&&t.slice(0,W(t)+1).replace(X,"")}function y(t){var r=typeof t;return t!=null&&(r=="object"||r=="function")}var g=0/0,q=/^[-+]0x[0-9a-f]+$/i,z=/^0b[01]+$/i,C=/^0o[0-7]+$/i,D=parseInt;function O(t){if(typeof t=="number")return t;if(l(t))return g;if(y(t)){var r=typeof t.valueOf=="function"?t.valueOf():t;t=y(r)?r+"":r}if(typeof t!="string")return t===0?t:+t;t=_(t);var n=z.test(t);return n||C.test(t)?D(t.slice(2),n?2:8):q.test(t)?g:+t}var d=1/0,J=17976931348623157e292;function K(t){if(!t)return t===0?t:0;if(t=O(t),t===d||t===-d){var r=t<0?-1:1;return r*J}return t===t?t:0}function Q(t){var r=K(t),n=r%1;return r===r?n?r-n:r:0}function u(t){return t==null?"":S(t)}var V=j.isFinite,Z=Math.min;function v(t){var r=Math[t];return function(n,e){if(n=O(n),e=e==null?0:Z(Q(e),292),e&&V(n)){var o=(u(n)+"e").split("e"),c=r(o[0]+"e"+(+o[1]+e));return o=(u(c)+"e").split("e"),+(o[0]+"e"+(+o[1]-e))}return r(n)}}var tt=v("round");const rt=tt;export{rt as r};

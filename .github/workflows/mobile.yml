name: "Create Release Mobile Assets"

on:
  push:
    tags:
      - "mobile-*"

jobs:
  Build:
    name: Build Mobile Assets
    runs-on: macos-latest
    environment: mobile-release
    outputs:
      full_tag_name_output: ${{ steps.version_context.outputs.full_tag_name_output }}
      is_staging_build_output: ${{ steps.version_context.outputs.is_staging_build_output }}
      display_version_output: ${{ steps.version_context.outputs.display_version_output }}
    steps:
      - name: Determine Version, Staging Context, and Display Version
        id: version_context
        run: |
          TARGET_TAG="${{ github.ref_name }}"
          IS_STAGING=false
          VERSION_FOR_DISPLAY=""

          echo "Processing Mobile Tag: $TARGET_TAG"
          if [[ "$TARGET_TAG" == mobile-staging-* ]]; then
            IS_STAGING=true
            VERSION_FOR_DISPLAY="${TARGET_TAG#mobile-}"
          elif [[ "$TARGET_TAG" == mobile-* ]]; then
            IS_STAGING=false
            VERSION_FOR_DISPLAY="${TARGET_TAG#mobile-}"
          else
            echo "::warning ::Tag '$TARGET_TAG' does not start with 'mobile-'. This is unexpected."
            IS_STAGING=true # Fallback
            VERSION_FOR_DISPLAY="$TARGET_TAG"
          fi
          echo "Full Mobile Tag Name: $TARGET_TAG"
          echo "Is Mobile Staging Build: $IS_STAGING"
          echo "Mobile Display Version: $VERSION_FOR_DISPLAY"
          # 設置環境變數 (使用 M_ 前綴)
          echo "M_TAG_VERSION_ENV=${TARGET_TAG}" >> $GITHUB_ENV
          echo "M_IS_STAGING_BUILD_ENV=${IS_STAGING}" >> $GITHUB_ENV
          echo "M_DISPLAY_VERSION_ENV=${VERSION_FOR_DISPLAY}" >> $GITHUB_ENV
          echo "full_tag_name_output=${TARGET_TAG}" >> $GITHUB_OUTPUT
          echo "is_staging_build_output=${IS_STAGING}" >> $GITHUB_OUTPUT
          echo "display_version_output=${VERSION_FOR_DISPLAY}" >> $GITHUB_OUTPUT

      - name: fetch repo source
        uses: actions/checkout@v4
        with:
          repository: "Yvictor/scone"
          token: ${{ secrets.SCONE_GITHUB_TOKEN }}
          ref: ${{ env.M_IS_STAGING_BUILD_ENV == 'true' && 'staging' || 'master' }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Install Dependencies using pnpm
        run: pnpm install --frozen-lockfile

      - name: Create .env file for vite build
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: Build bundle for mobile
        run: pnpm build
        env:
          VITE_ENV: ${{ env.M_IS_STAGING_BUILD_ENV == 'true' && 'staging' || 'production' }}

      - name: Sync Capacitor
        run: pnpm sync

      - name: Setup Ruby and Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Set Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 'latest-stable'

      - name: Bundle install in ios/App
        run: bundle install
        working-directory: ./ios/App

      - name: Run Fastlane
        uses: maierj/fastlane-action@v3.1.0
        with:
          lane: 'release'
          subdirectory: 'ios/App'
        env:
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_API_KEY_P8 }}
          APP_STORE_CONNECT_DISTRIBUTION_CERTIFICATE_BASE64: ${{ secrets.APP_STORE_CONNECT_DISTRIBUTION_CERTIFICATE_BASE64 }}
          APP_STORE_CONNECT_DISTRIBUTION_CERTIFICATE_PASSWORD: ${{ secrets.APP_STORE_CONNECT_DISTRIBUTION_CERTIFICATE_PASSWORD }}
          APP_STORE_CONNECT_PROVISIONING_PROFILE_BASE64: ${{ secrets.APP_STORE_CONNECT_PROVISIONING_PROFILE_BASE64 }}
          APP_STORE_CONNECT_TEAM_ID: ${{ secrets.APP_STORE_CONNECT_TEAM_ID }}
          XCODE_SIGNING_IDENTITY: ${{ secrets.XCODE_SIGNING_IDENTITY }}

      - name: Bundle zip
        run: pnpm bundle:encrypt

      - name: Upload production-ready bundle zip
        uses: actions/upload-artifact@v4
        with:
          name: mobile-ota-bundle-${{ env.M_DISPLAY_VERSION_ENV }}
          path: |
            *.zip
            *.checksum
            key

  Release:
    name: Create GitHub Release (Mobile)
    needs: Build
    if: needs.Build.outputs.is_staging_build_output == 'false' # 只處理正式 release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      CR_FULL_TAG_MOBILE: ${{ needs.Build.outputs.full_tag_name_output }}
      CR_DISPLAY_VERSION_MOBILE: ${{ needs.Build.outputs.display_version_output }}
    steps:
      - name: Checkout Yvictor/scone for changelog generation
        uses: actions/checkout@v4
        with:
          repository: "Yvictor/scone"
          token: ${{ secrets.SCONE_GITHUB_TOKEN }}
          fetch-depth: 0
          ref: ${{ env.CR_DISPLAY_VERSION_MOBILE }}
          path: 'changelog_repo'

      - name: Download mobile OTA bundle artifact
        uses: actions/download-artifact@v4
        with:
          name: mobile-ota-bundle-${{ env.CR_DISPLAY_VERSION_MOBILE }}
          path: mobile-release-assets/

      - name: Setup Node.js for changelog
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install conventional-changelog-cli
        run: npm install -g conventional-changelog-cli

      - name: Generate Changelog from Yvictor/scone history
        id: mobile_changelog
        working-directory: changelog_repo
        run: |
          echo "Attempting to generate changelog from Yvictor/scone (path: $(pwd)) for ref: ${{ env.CR_DISPLAY_VERSION_MOBILE }}"
          conventional-changelog -p conventionalcommits -r 1 --commit-path . > ../RELEASE_NOTES_MOBILE.md || echo "Changelog generation for specified ref might have issues or be empty."

          echo "--- Generated Mobile Release Notes (from Yvictor/scone history) ---"
          cat ../RELEASE_NOTES_MOBILE.md
          echo "--------------------------------------------------------------------"

      - name: List files before release
        run: |
          echo "Workspace root:"
          ls -la
          echo "mobile-release-assets:"
          ls -la mobile-release-assets/
          echo "Changelog file content:"
          cat RELEASE_NOTES_MOBILE.md

      - name: Create GitHub Release (Mobile)
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.CR_FULL_TAG_MOBILE }}
          name: "Mobile ${{ env.CR_DISPLAY_VERSION_MOBILE }}"
          body_path: RELEASE_NOTES_MOBILE.md
          prerelease: false # 此 job 只處理正式 release
          files: |
            mobile-release-assets/*.zip
            mobile-release-assets/*.checksum
            mobile-release-assets/key
